/**
 * This file was generated by:
 *   relay-compiler
 *
 * @providesModule partnerDetailQuery.graphql
 * @generated SignedSource<<539781c90856f5f858bdb0feacfaf6ca>>
 * @relayHash bf8c4241609da66e8dfafe6b3c4e51a1
 * @flow
 * @nogrep
 */

'use strict';

/*::
import type {ConcreteBatch} from 'relay-runtime';

*/

/* eslint-disable comma-dangle, quotes */

/*
query partnerDetailQuery(
  $partnerNumber: Int!
) {
  partners(partnerNumber: $partnerNumber) {
    partnerNumber
    firstname
    lastname
    birthday
    sex
  }
}
*/

const batch /*: ConcreteBatch*/ = {
  "fragment": {
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "partnerNumber",
        "type": "Int!",
        "defaultValue": null
      }
    ],
    "kind": "Fragment",
    "metadata": null,
    "name": "partnerDetailQuery",
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "partnerNumber",
            "variableName": "partnerNumber",
            "type": "Int"
          }
        ],
        "concreteType": "Partner",
        "name": "partners",
        "plural": true,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "args": null,
            "name": "partnerNumber",
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "args": null,
            "name": "firstname",
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "args": null,
            "name": "lastname",
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "args": null,
            "name": "birthday",
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "args": null,
            "name": "sex",
            "storageKey": null
          }
        ],
        "storageKey": null
      }
    ],
    "type": "Query"
  },
  "id": null,
  "kind": "Batch",
  "metadata": {},
  "name": "partnerDetailQuery",
  "query": {
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "partnerNumber",
        "type": "Int!",
        "defaultValue": null
      }
    ],
    "kind": "Root",
    "name": "partnerDetailQuery",
    "operation": "query",
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "partnerNumber",
            "variableName": "partnerNumber",
            "type": "Int"
          }
        ],
        "concreteType": "Partner",
        "name": "partners",
        "plural": true,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "args": null,
            "name": "partnerNumber",
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "args": null,
            "name": "firstname",
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "args": null,
            "name": "lastname",
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "args": null,
            "name": "birthday",
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "args": null,
            "name": "sex",
            "storageKey": null
          }
        ],
        "storageKey": null
      }
    ]
  },
  "text": "query partnerDetailQuery(\n  $partnerNumber: Int!\n) {\n  partners(partnerNumber: $partnerNumber) {\n    partnerNumber\n    firstname\n    lastname\n    birthday\n    sex\n  }\n}\n"
};

module.exports = batch;
